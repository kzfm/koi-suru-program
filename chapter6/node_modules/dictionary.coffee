fs = require('fs');

exports.Dictionary = class Dictionary
  constructor: () ->
    random_list = []
    pattern_list = []
    fs.readFileSync('dics/random.txt').toString().split('\n').forEach(
      (line) ->
        if line != ''
          random_list.push(line)
    )
    fs.readFileSync('dics/pattern.txt').toString().split('\n').forEach(
      (line) ->
        words = line.split('\t')
        if words[0] != ''
          pattern_list.push(new PatternItem(words[0],words[1]))
    )
    @random  = random_list
    @pattern = pattern_list

exports.PatternItem = class PatternItem
  separator = /^((-?\d+)\#\#)?(.*)$/
  select_random: (l) -> l[Math.floor(Math.random()*l.length)]

  constructor: (pattern, phrase) ->
    p = pattern.match(separator)
    @modify = parseInt(p[2])
    @pattern = p[3]
    ps = []
    for ph in phrase.split('|')
      pp = ph.match(separator)
      ps.push({'need': parseInt(pp[2]), 'phrase': pp[3]})
    @phrases = ps

  pmatch: (str) -> str.match(@pattern)

  choice: (mood) ->
    choices = []
    for p in @phrases
      if @issuitable(p['need'], mood)
        choices.push(p['phrase'])

    if choices.length == 0
      null
    else
      @select_random(choices)

  issuitable: (need, mood) ->
    if need == 0
      true
    else if need > 0
      mood > need
    else
      mood < need

